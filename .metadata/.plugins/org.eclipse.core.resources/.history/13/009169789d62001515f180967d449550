package ie.wit.assignment.collections;


import ie.wit.assignment.exceptions.ItemNotFoundException;
import ie.wit.assignment.exceptions.ListEmptyException;
import ie.wit.assignment.gui.AlertBox;
import ie.wit.assignment.implementableObjects.Manager;

public class ManagerCollector
{
	private Manager[] listOfManagers;
	private static int totalManagers = 0;
	
	public ManagerCollector(int maxSize)
	{
		listOfManagers = new Manager[maxSize];
	} 
	
	public ManagerCollector()
	{
		listOfManagers = new Manager[10];
	}
	
	
	private boolean isFull()
	{
		if(totalManagers == listOfManagers.length){
			return true;
		}
		return false;
	}
	private void isEmpty() throws ListEmptyException
	{
		if(totalManagers == 0){
			throw new ListEmptyException("List Empty");
		}
	}
	
	private int search(String idIn)
	{
		try{
			//Throws ListEmptyException if list is empty
			isEmpty();
			for(int i = 0; i < totalManagers; i++){
				if(idIn.equals(listOfManagers[i].getManagerId())){
					return i;
				}
			}
			throw new ItemNotFoundException("No such manager ID exists");
		}
		catch(ListEmptyException exception)
		{
			AlertBox.display("List Empty", exception.getMessage());
			return -999;
		}
		catch(ItemNotFoundException exception)
		{
			AlertBox.display("No Manager", exception.getMessage());
			return -888;
		}
		catch(Exception exception){
			AlertBox.display("Error", exception.getMessage());
			return -777;
		}
		
	}
	private int searchByName(String fNameIn, String lNameIn)
	{
		try{
			//Throws ListEmptyException 
			isEmpty();
			for (int i = 0; i < totalManagers; i++){
				if(fNameIn.equals(listOfManagers[i].getManagerFName()) && lNameIn.equals(listOfManagers[i].getManagerLName())){
					return i;
				}
			}
			throw new ItemNotFoundException("No manager with that name exists");
		} 
		catch(ListEmptyException exception)
		{
			AlertBox.display("List Empty", exception.getMessage());
			return -999;
		} 
		catch(ItemNotFoundException exception)
		{
			AlertBox.display("No Manager", exception.getMessage());
			return -888;
		}
		catch(Exception exception)
		{
			AlertBox.display("Error", exception.getMessage());
			return -777;
		}

	}
	public static int getTotalManagers(){
		return totalManagers;
	}
	
	public boolean addManager(Manager managerIn)
	{
		if(!isFull()){
			listOfManagers[totalManagers] = managerIn;
			totalManagers++;
			return true;
		}
		return false;
	}
	public boolean removeManager(String idIn)
	{
		int index = search(idIn);
		for(int i = index; i < totalManagers -2; i++){
			listOfManagers[i] = listOfManagers[i + 1];
		}
		totalManagers --;
		return true;
	}
	public Manager getManagerById(String idIn)
	{
		//Need to sort passing exceptions on
		int index = search(idIn);
		if(index == -888 || index == -999){
			return null;
		} else {
			return listOfManagers[index];
		}
	}
	
	public Manager getManagerByName(String fNameIn, String lNameIn){
		int index = searchByName(fNameIn, lNameIn);
		return listOfManagers[index];
	}
	
	public String listAll()
	{
		String tempString = "";
		try{
			isEmpty();
			for(int i = 0; i < totalManagers; i++){
				System.out.println(listOfManagers[i].toString());
				/*tempString += listOfManagers[i].toString();*/
			}
		} catch(ListEmptyException exception)
		{
			AlertBox.display("List Empty",exception.getMessage());
			return exception.getMessage();
		} catch(NullPointerException exception)
		{
			AlertBox.display("Null Pointer", exception.getMessage());
			return exception.getMessage();
		}
		return tempString;
	}
}
